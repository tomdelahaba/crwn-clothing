{"ast":null,"code":"/*\n ** As we are working with firebase shopdata we do not need to import our SHOP_DATA anymore\n import SHOP_DATA from \"./shop.data\";\n */\nimport shopActionTypes from \"./shop.types\";\nconst INIT_STATE = {\n  collections: null,\n  isFetching: false\n};\n\nconst shopReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case shopActionTypes.START:\n      return { ...state,\n        isFetching: true\n      };\n\n    case shopActionTypes.FETCH_COLLECTIONS_SUCCESS:\n      return { ...state,\n        isFetching: false,\n        collections: action.payload\n      };\n\n    case shopActionTypes.UPDATE_COLLECTIONS:\n      return { ...state,\n        collections: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["/Users/tomas.jarolimek/Downloads/__dev/react/crwn-clothing/src/redux/shop/shop.reducer.js"],"names":["shopActionTypes","INIT_STATE","collections","isFetching","shopReducer","state","action","type","START","FETCH_COLLECTIONS_SUCCESS","payload","UPDATE_COLLECTIONS"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAE;AAFK,CAAnB;;AAKA,MAAMC,WAAW,GAAG,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBJ,UAAuB;AAAA,MAAXK,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,eAAe,CAACQ,KAArB;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYF,QAAAA,UAAU,EAAE;AAAxB,OAAP;;AACF,SAAKH,eAAe,CAACS,yBAArB;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYF,QAAAA,UAAU,EAAE,KAAxB;AAA+BD,QAAAA,WAAW,EAAEI,MAAM,CAACI;AAAnD,OAAP;;AACF,SAAKV,eAAe,CAACW,kBAArB;AACE,aAAO,EACL,GAAGN,KADE;AAELH,QAAAA,WAAW,EAAEI,MAAM,CAACI;AAFf,OAAP;;AAIF;AACE,aAAOL,KAAP;AAXJ;AAaD,CAdD;;AAgBA,eAAeD,WAAf","sourcesContent":["/*\n ** As we are working with firebase shopdata we do not need to import our SHOP_DATA anymore\n import SHOP_DATA from \"./shop.data\";\n */\n\nimport shopActionTypes from \"./shop.types\";\n\nconst INIT_STATE = {\n  collections: null,\n  isFetching: false,\n};\n\nconst shopReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case shopActionTypes.START:\n      return { ...state, isFetching: true };\n    case shopActionTypes.FETCH_COLLECTIONS_SUCCESS:\n      return { ...state, isFetching: false, collections: action.payload };\n    case shopActionTypes.UPDATE_COLLECTIONS:\n      return {\n        ...state,\n        collections: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;\n"]},"metadata":{},"sourceType":"module"}