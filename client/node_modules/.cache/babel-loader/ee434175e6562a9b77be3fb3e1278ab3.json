{"ast":null,"code":"import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/auth\";\nconst fConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firestore.collection(\"users\");\n  const snapShot = await userRef.get();\n  const collectionSnapshot = await collectionRef.get();\n  console.log({\n    collections: collectionSnapshot.docs.map(doc => doc.data())\n  });\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (err) {\n      console.error(\"Error creating user\", err.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(fConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider).catch(e => console.error(e));\nexport default firebase;","map":{"version":3,"sources":["/Users/tomas.jarolimek/Downloads/__dev/react/crwn-clothing/src/firebase/firebase.util.js"],"names":["firebase","fConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionRef","collection","snapShot","get","collectionSnapshot","console","log","collections","docs","map","data","exists","displayName","email","createdAt","Date","set","err","error","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","catch","e"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,2BAAP;AACA,OAAO,sBAAP;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADN;AAEdC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,8BAFV;AAGdC,EAAAA,SAAS,EAAEL,OAAO,CAACC,GAAR,CAAYK,6BAHT;AAIdC,EAAAA,aAAa,EAAEP,OAAO,CAACC,GAAR,CAAYO,iCAJb;AAKdC,EAAAA,iBAAiB,EAAET,OAAO,CAACC,GAAR,CAAYS,sCALjB;AAMdC,EAAAA,KAAK,EAAEX,OAAO,CAACC,GAAR,CAAYW,yBANL;AAOdC,EAAAA,aAAa,EAAEb,OAAO,CAACC,GAAR,CAAYa;AAPb,CAAhB;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqB,OAArB,CAAtB;AAEA,QAAMC,QAAQ,GAAG,MAAMN,OAAO,CAACO,GAAR,EAAvB;AACA,QAAMC,kBAAkB,GAAG,MAAMJ,aAAa,CAACG,GAAd,EAAjC;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY;AACVC,IAAAA,WAAW,EAAEH,kBAAkB,CAACI,IAAnB,CAAwBC,GAAxB,CAA6BX,GAAD,IAASA,GAAG,CAACY,IAAJ,EAArC;AADH,GAAZ;;AAIA,MAAI,CAACR,QAAQ,CAACS,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBnB,QAA/B;AACA,UAAMoB,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMnB,OAAO,CAACoB,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGnB;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOsB,GAAP,EAAY;AACZZ,MAAAA,OAAO,CAACa,KAAR,CAAc,qBAAd,EAAqCD,GAAG,CAACE,OAAzC;AACD;AACF;;AAED,SAAOvB,OAAP;AACD,CA9BM;AAgCPrB,QAAQ,CAAC6C,aAAT,CAAuB5C,OAAvB;AAEA,OAAO,MAAM6C,IAAI,GAAG9C,QAAQ,CAAC8C,IAAT,EAAb;AACP,OAAO,MAAMxB,SAAS,GAAGtB,QAAQ,CAACsB,SAAT,EAAlB;AAEP,MAAMyB,QAAQ,GAAG,IAAI/C,QAAQ,CAAC8C,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAC9BL,IAAI,CAACM,eAAL,CAAqBL,QAArB,EAA+BM,KAA/B,CAAsCC,CAAD,IAAOxB,OAAO,CAACa,KAAR,CAAcW,CAAd,CAA5C,CADK;AAGP,eAAetD,QAAf","sourcesContent":["import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/auth\";\n\nconst fConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firestore.collection(\"users\");\n\n  const snapShot = await userRef.get();\n  const collectionSnapshot = await collectionRef.get();\n\n  console.log({\n    collections: collectionSnapshot.docs.map((doc) => doc.data()),\n  });\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData,\n      });\n    } catch (err) {\n      console.error(\"Error creating user\", err.message);\n    }\n  }\n\n  return userRef;\n};\n\nfirebase.initializeApp(fConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () =>\n  auth.signInWithPopup(provider).catch((e) => console.error(e));\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}