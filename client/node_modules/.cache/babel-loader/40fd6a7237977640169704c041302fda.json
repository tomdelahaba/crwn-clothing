{"ast":null,"code":"import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/auth\"; // import keys from \"../config/config\";\n\n/* const fConfig = {\n  apiKey: keys.REACT_APP_FIREBASE_API_KEY,\n  authDomain: keys.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: keys.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: keys.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: keys.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: keys.REACT_APP_FIREBASE_APP_ID,\n  measurementId: keys.REACT_APP_MEASUREMENT_ID,\n};\n\n*/\n\nconsole.warn(process.env.REACT_APP_FIREBASE_API_KEY);\n/*\nconst fConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};*/\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (err) {\n      console.error(\"Error creating user\", err.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(fConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider).catch(e => console.error(e));\nexport default firebase;","map":{"version":3,"sources":["/Users/tomas.jarolimek/Downloads/__dev/react/crwn-clothing/src/firebase/firebase.util.js"],"names":["firebase","console","warn","process","env","REACT_APP_FIREBASE_API_KEY","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","err","error","message","initializeApp","fConfig","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","catch","e"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,2BAAP;AACA,OAAO,sBAAP,C,CACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,OAAO,CAACC,IAAR,CAAaC,OAAO,CAACC,GAAR,CAAYC,0BAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOa,GAAP,EAAY;AACZpB,MAAAA,OAAO,CAACqB,KAAR,CAAc,qBAAd,EAAqCD,GAAG,CAACE,OAAzC;AACD;AACF;;AAED,SAAOd,OAAP;AACD,CAvBM;AAyBPT,QAAQ,CAACwB,aAAT,CAAuBC,OAAvB;AAEA,OAAO,MAAMC,IAAI,GAAG1B,QAAQ,CAAC0B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGV,QAAQ,CAACU,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI3B,QAAQ,CAAC0B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAC9BL,IAAI,CAACM,eAAL,CAAqBL,QAArB,EAA+BM,KAA/B,CAAsCC,CAAD,IAAOjC,OAAO,CAACqB,KAAR,CAAcY,CAAd,CAA5C,CADK;AAGP,eAAelC,QAAf","sourcesContent":["import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/auth\";\n// import keys from \"../config/config\";\n\n/* const fConfig = {\n  apiKey: keys.REACT_APP_FIREBASE_API_KEY,\n  authDomain: keys.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: keys.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: keys.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: keys.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: keys.REACT_APP_FIREBASE_APP_ID,\n  measurementId: keys.REACT_APP_MEASUREMENT_ID,\n};\n\n*/\n\nconsole.warn(process.env.REACT_APP_FIREBASE_API_KEY);\n/*\nconst fConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};*/\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData,\n      });\n    } catch (err) {\n      console.error(\"Error creating user\", err.message);\n    }\n  }\n\n  return userRef;\n};\n\nfirebase.initializeApp(fConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () =>\n  auth.signInWithPopup(provider).catch((e) => console.error(e));\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}